# Thuộc tính 'version' không còn cần thiết cho các phiên bản Docker Compose mới
# version: '3.8'

services:
  # Định nghĩa service cho ứng dụng userservice của bạn
  userservice:
    build:
      context: .  # Ngữ cảnh build là thư mục hiện tại (thư mục gốc của dự án đa module, ví dụ: hyperBuy-main/)
      dockerfile: user/Dockerfile # Đường dẫn đến Dockerfile của module 'user' từ thư mục gốc
    container_name: user-service-app
    ports:
      - "8080:8080" # userservice chạy trên port 8080 trong container
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/hyperBuy?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root # Nên quản lý qua .env file
      - JWT_SIGNER_KEY=!TJXchW5FLOeSBb63Kck+DFHTaRpWL4JUGcWFgWxUG5S1F/ly/LgJxHnMQaF46A/i # Nên quản lý qua .env file
      # - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      db:
        condition: service_healthy
    networks:
      - my-network

  # Định nghĩa service cho ứng dụng productservice của bạn
  productservice:
    build:
      context: .  # Ngữ cảnh build là thư mục hiện tại (thư mục gốc của dự án đa module)
      dockerfile: product/Dockerfile # Đường dẫn đến Dockerfile của module 'product' từ thư mục gốc
    container_name: product-service-app
    ports:
      - "8081:8081" # productservice chạy trên port 8081 trong container
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/hyperBuy?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root # Nên quản lý qua .env file
      # (Tùy chọn) Nếu productservice có các biến môi trường riêng, thêm vào đây
      # - SPRING_PROFILES_ACTIVE=docker
      # Cấu hình để productservice có thể gọi userservice (nếu cần)
      # - USER_SERVICE_URL=http://userservice:8080/api/v1/users # Ví dụ
    depends_on:
      db:
        condition: service_healthy
    networks:
      - my-network

  # Định nghĩa service cho cơ sở dữ liệu MySQL
  db:
    image: mysql:8.0
    container_name: mysql-db
    ports:
      - "3307:3306" # Ánh xạ cổng 3307 của host ra 3306 của container
    environment:
      # QUAN TRỌNG: Nên sử dụng file .env để quản lý các biến nhạy cảm này
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-root} # Sử dụng biến từ .env, nếu không có thì mặc định là 'root' (không khuyến khích cho production)
      - MYSQL_DATABASE=hyperBuy
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-P", "3306", "-u" , "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - my-network

volumes:
  mysql_data: # Volume để lưu trữ dữ liệu của MySQL

networks:
  my-network: # Mạng tùy chỉnh để các container có thể giao tiếp với nhau qua tên service
    driver: bridge
